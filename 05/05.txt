
Напишите структуру базы данных для хранения информации о своей книжной Библиотеке:
основная информация названия книг и имена авторов.

Изобразите иерархию классов работающую с данной библиотекой.
(Возможность создание, выборка, удаление книги. Получение всего списка книг, сортировка и поиск книг по атрибутам)

---------------

database Library

// таблица книг

table books
-----------
id integer primary key
varchar title
integer edition

// таблица авторов

table authors
-------------
id integer primary key
varchar name

// таблица связи книг с авторами типа many-to-many
// у одной книги может быть много авторов
// у одного автора может быть много книг
// здесь первичный ключ составной book_id+author_id
// ALTER TABLE `books_authors` ADD PRIMARY KEY (`book_id`, `author_id`);

table books_authors
-------------------
book_id integer
author_id integer


иерархия классов
я бы использовал MVC подход и реализовал работу с книгами в моделях

в простейшем случае у нас в базе две сущности - книги и авторы
создадим две модели, которые наследуются от некоей базовой абстрактной модели

например так

class Book extends AbstractModel {
    public function createNew(Book $book) {
        // insert new book
    }

    public function delete($book_id) {
        // delete book where id = $book_id
    }

    public function getById($book_id) {
        // return the book object
    }

    public function getAll() {
        // return all books
    }

    public function searchByXXX($xxx) {
        // return search result for XXX = $xxx
    }

    ...
}

ну естественно нужно делать проверки входных данных и защиту от SQL инъекций

аналогично и для модели авторов


